FROM balenalib/%%BALENA_ARCH%%-ubuntu

# install ros2
# note that this does not clean up the apt installation packages.
# we can rely on balena build-diffs rather than hand-picked ros2 features
RUN apt update -q && apt install -y -qq software-properties-common
RUN add-apt-repository universe && apt update -qq && apt install -y -qq curl gnupg lsb-release
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN bash -c 'echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(source /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null'
ENV ROS_DISTRO=galactic
RUN apt update -qq && apt install -y -qq ros-${ROS_DISTRO}-ros-base

# install opencv_cam
RUN apt install -y -qq git build-essential python3-colcon-common-extensions ros-${ROS_DISTRO}-vision-opencv ros-${ROS_DISTRO}-camera-calibration-parsers
ENV ROS_PROJECT_DIR=/opt/project
WORKDIR ${ROS_PROJECT_DIR}/src
RUN git clone https://github.com/clydemcqueen/opencv_cam.git
RUN git clone https://github.com/ptrmu/ros2_shared.git
WORKDIR ${ROS_PROJECT_DIR}
RUN bash -c 'source /opt/ros/$ROS_DISTRO/setup.bash && colcon build'

# TODO modify .bashrc and/or .profile to source ros variables

# install our application
# TODO

CMD ["bash", "-c", "sleep infinity"]